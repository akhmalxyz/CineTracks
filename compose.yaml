version: '3.8'

services:
  db:
    container_name: db
    image : postgres:13
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5433:5432"
    volumes:
      - pg-data:/var/lib/postgresql/data
    
    networks:
      - backend-network
  
  nginx:
    container_name: nginx
    image: nginx:latest
    ports:
      - "8080:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
    # depends_on:
    #   - auth-service
    networks:
      - backend-network
    extra_hosts:
      - "host.docker.internal:host-gateway"  # Allows containers to access host services
  
  # auth-service:
  #   build: ./backend/auth-service
  #   container_name: auth-service
  #   environment:
  #     - SPRING_PROFILES_ACTIVE=docker
  #     - POSTGRES_URL=jdbc:postgresql://db:5432/${POSTGRES_DB}
  #     - POSTGRES_USER=${POSTGRES_USER}
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
  #     - JWT_SECRET=${JWT_SECRET}
  #   # Don't expose port externally - only through NGINX
  #   # ports:
  #   #   - "8081:8081"
  #   depends_on:
  #     - db
  #   networks:
  #     - backend-network


volumes:
  pg-data:

networks:
  backend-network:
    driver: bridge